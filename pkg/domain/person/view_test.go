package person

import (
	"testing"
)

func TestTelegramView(t *testing.T) {

	tests := map[string]struct {
		p    Person
		str  string
		text string
	}{
		"Fullname": {
			p:    Person{Fullname: "Full Name"},
			str:  "üë§ Full Name",
			text: "*–ò–º—è*: \n*–§–∞–º–∏–ª–∏—è*: \n*–ü–æ–ª–Ω–æ–µ –∏–º—è*: Full Name\n*–ü–æ–ª*: –ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω",
		},
		"Firstname": {
			p:    Person{Firstname: "Firstname"},
			str:  "üë§ Firstname",
			text: "*–ò–º—è*: Firstname\n*–§–∞–º–∏–ª–∏—è*: \n*–ü–æ–ª–Ω–æ–µ –∏–º—è*: Firstname\n*–ü–æ–ª*: –ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω",
		},
		"Firstname_Lastname": {
			p: Person{
				Firstname: "Firstname",
				Lastname:  "Lastname"},
			str:  "üë§ Firstname Lastname",
			text: "*–ò–º—è*: Firstname\n*–§–∞–º–∏–ª–∏—è*: Lastname\n*–ü–æ–ª–Ω–æ–µ –∏–º—è*: Firstname Lastname\n*–ü–æ–ª*: –ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω",
		},
		"Fullname_Firstname_Lastname": {
			p: Person{
				Fullname:  "Full Name",
				Firstname: "Firstname",
				Lastname:  "Lastname",
				Sex:       1},
			str:  "üë¶üèª Full Name",
			text: "*–ò–º—è*: Firstname\n*–§–∞–º–∏–ª–∏—è*: Lastname\n*–ü–æ–ª–Ω–æ–µ –∏–º—è*: Full Name\n*–ü–æ–ª*: üë¶üèª –º–∞–ª—å—á–∏–∫",
		},
	}

	for name, test := range tests {
		t.Run(name, func(t *testing.T) {
			tgv := TelegramView{Person: test.p}
			str := tgv.String()
			text := tgv.GetText()
			if str != test.str {
				t.Fail()
			}
			if text != test.text {
				t.Fail()
			}
		})
	}
}
